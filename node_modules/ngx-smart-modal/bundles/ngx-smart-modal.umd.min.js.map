{"version":3,"file":"ngx-smart-modal.umd.min.js","sources":["../../src/services/ngx-smart-modal.service.ts","../../src/components/ngx-smart-modal.component.ts","../../src/modules/ngx-smart-modal.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgxSmartModalComponent } from '../components/ngx-smart-modal.component';\nimport { ModalInstance } from './modal-instance';\nexport class NgxSmartModalService {\npublic modalStack: ModalInstance[] = [];\nprivate debouncer: any;\n/**\n * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n * \n * @param {?} modalInstance\n * @param {?=} force\n * @return {?}\n */\npublic addModal(modalInstance: ModalInstance, force?: boolean): void {\n    if (force) {\n      const /** @type {?} */ i: number = this.modalStack.findIndex((o: ModalInstance) => {\n        return o.id === modalInstance.id;\n      });\n      if (i > -1) {\n        this.modalStack[i].modal = modalInstance.modal;\n      } else {\n        this.modalStack.push(modalInstance);\n      }\n      return;\n    }\n    this.modalStack.push(modalInstance);\n  }\n/**\n * Retrieve a modal instance by its identifier.\n * \n * @param {?} id\n * @return {?}\n */\npublic getModal(id: string): NgxSmartModalComponent {\n    return this.modalStack.filter((o: any) => {\n      return o.id === id;\n    })[0].modal;\n  }\n/**\n * Retrieve all the created modals.\n * \n * @return {?}\n */\npublic getModalStack(): ModalInstance[] {\n    return this.modalStack;\n  }\n/**\n * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n * \n * @return {?}\n */\npublic getOpenedModals(): ModalInstance[] {\n    const /** @type {?} */ modals: ModalInstance[] = [];\n    this.modalStack.forEach((o: ModalInstance) => {\n      if (o.modal.visible) {\n        modals.push(o);\n      }\n    });\n    return modals;\n  }\n/**\n * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n * Use it to make a modal appear foreground.\n * \n * @return {?}\n */\npublic getHigherIndex(): number {\n    const /** @type {?} */ index: number[] = [];\n    const /** @type {?} */ modals: ModalInstance[] = this.getOpenedModals();\n    modals.forEach((o: ModalInstance) => {\n      index.push(o.modal.layerPosition);\n    });\n    return Math.max(...index) + 1;\n  }\n/**\n * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n * \n * @return {?}\n */\npublic getModalStackCount(): number {\n    return this.modalStack.length;\n  }\n/**\n * Remove a modal instance from the modal stack.\n * \n * @param {?} id\n * @return {?}\n */\npublic removeModal(id: string): void {\n    const /** @type {?} */ i: number = this.modalStack.findIndex((o: any) => {\n      return o.id === id;\n    });\n    if (i > -1) {\n      this.modalStack.splice(i, 1);\n    }\n  }\n/**\n * Associate data to an identified modal. If the modal isn't already associated to some data, it creates a new\n * entry in the `modalData` array with its `id` and the given `data`. If the modal already has data, it rewrites\n * them with the new ones. Finally if no modal found it returns an error message in the console and false value\n * as method output.\n * \n * @param {?} data\n * @param {?} id\n * @param {?=} force\n * @return {?}\n */\npublic setModalData(data: any, id: string, force?: boolean): boolean {\n    if (!!this.modalStack.find((o: ModalInstance) => {\n        return o.id === id;\n      })) {\n      this.getModal(id).setData(data, force);\n      return true;\n    } else {\n      return false;\n    }\n  }\n/**\n * Retrieve modal data by its identifier.\n * \n * @param {?} id\n * @return {?}\n */\npublic getModalData(id: string): any {\n    return this.getModal(id).getData();\n  }\n/**\n * Reset the data attached to a given modal.\n * \n * @param {?} id\n * @return {?}\n */\npublic resetModalData(id: string): any | boolean {\n    if (!!this.modalStack.find((o: ModalInstance) => {\n        return o.id === id;\n      })) {\n      const /** @type {?} */ removed: any = this.getModal(id).getData();\n      this.getModal(id).removeData();\n      return removed;\n    } else {\n      return false;\n    }\n  }\n/**\n * Close the latest opened modal if it has been declared as escapeAble\n * Using a debounce system because one or more modals could be listening\n * escape key press event.\n * @return {?}\n */\npublic closeLatestModal(): void {\n    const /** @type {?} */ me = this;\n    clearTimeout(this.debouncer);\n    this.debouncer = setTimeout(() => {\n      let /** @type {?} */ tmp: ModalInstance | undefined;\n      me.getOpenedModals().forEach((m: ModalInstance) => {\n        if (m.modal.layerPosition > (!!tmp ? tmp.modal.layerPosition : 0 && m.modal.escapeAble)) {\n          tmp = m;\n        }\n      });\n      return !!tmp ? tmp.modal.close() : false;\n    }, 100);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxSmartModalService_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSmartModalService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSmartModalService.ctorParameters;\n/** @type {?} */\nNgxSmartModalService.prototype.modalStack;\n/** @type {?} */\nNgxSmartModalService.prototype.debouncer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  HostListener,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { NgxSmartModalService } from '../services/ngx-smart-modal.service';\nexport class NgxSmartModalComponent implements OnInit, OnDestroy {\npublic closable: boolean = true;\npublic escapeAble: boolean = true;\npublic identifier: string;\npublic customClass: string = '';\npublic visible: boolean = false;\npublic backdrop: boolean = true;\npublic force: boolean = true;\npublic visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\npublic onClose: EventEmitter<any> = new EventEmitter();\npublic onDismiss: EventEmitter<any> = new EventEmitter();\npublic onOpen: EventEmitter<any> = new EventEmitter();\npublic onEscape: EventEmitter<any> = new EventEmitter();\npublic onDataAdded: EventEmitter<any> = new EventEmitter();\npublic onDataRemoved: EventEmitter<any> = new EventEmitter();\npublic layerPosition: number = 1041;\npublic overlayVisible: boolean = false;\nprivate data: any = null;\n/**\n * @param {?} ngxSmartModalService\n * @param {?} changeDetectorRef\n */\nconstructor(private ngxSmartModalService: NgxSmartModalService,\nprivate changeDetectorRef: ChangeDetectorRef) {\n  }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    this.layerPosition += this.ngxSmartModalService.getModalStackCount();\n    this.ngxSmartModalService.addModal({id: this.identifier, modal: this}, this.force);\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy() {\n    this.ngxSmartModalService.removeModal(this.identifier);\n  }\n/**\n * @param {?=} top\n * @return {?}\n */\npublic open(top?: boolean): void {\n    if (top) {\n      this.layerPosition = this.ngxSmartModalService.getHigherIndex();\n    }\n    if (!document.body.classList.contains('dialog-open')) {\n      document.body.classList.add('dialog-open');\n    }\n    this.overlayVisible = true;\n    this.visible = true;\n    this.onOpen.emit(this);\n  }\n/**\n * @return {?}\n */\npublic close(): void {\n    const /** @type {?} */ me = this;\n    this.visible = false;\n    this.visibleChange.emit(this.visible);\n    this.onClose.emit(this);\n    if (document.body.classList.contains('dialog-open')) {\n      document.body.classList.remove('dialog-open');\n    }\n    setTimeout(() => {\n      me.overlayVisible = false;\n      me.changeDetectorRef.markForCheck();\n    }, 150);\n  }\n/**\n * @param {?} e\n * @return {?}\n */\npublic dismiss(e: any): void {\n    const /** @type {?} */ me = this;\n    if (e.target.classList.contains('overlay')) {\n      this.visible = false;\n      this.visibleChange.emit(this.visible);\n      this.onDismiss.emit(this);\n      if (document.body.classList.contains('dialog-open')) {\n        document.body.classList.remove('dialog-open');\n      }\n      setTimeout(() => {\n        me.overlayVisible = false;\n        me.changeDetectorRef.markForCheck();\n      }, 150);\n    }\n  }\n/**\n * @param {?} className\n * @return {?}\n */\npublic addCustomClass(className: string): void {\n    if (!this.customClass.length) {\n      this.customClass = className;\n    } else {\n      this.customClass += ' ' + className;\n    }\n  }\n/**\n * @param {?=} className\n * @return {?}\n */\npublic removeCustomClass(className?: string): void {\n    if (className) {\n      this.customClass = this.customClass.replace(className, '').trim();\n    } else {\n      this.customClass = '';\n    }\n  }\n/**\n * @return {?}\n */\npublic isVisible(): boolean {\n    return this.visible;\n  }\n/**\n * @return {?}\n */\npublic hasData(): boolean {\n    return !!this.data;\n  }\n/**\n * @param {?} data\n * @param {?=} force\n * @return {?}\n */\npublic setData(data: any, force?: boolean): any {\n    if (!this.data || (!!this.data && force)) {\n      setTimeout(() => {\n        this.data = data;\n        this.onDataAdded.emit(this.data);\n      }, 0);\n    }\n  }\n/**\n * @return {?}\n */\npublic getData(): any {\n    return this.data;\n  }\n/**\n * @return {?}\n */\npublic removeData(): void {\n    setTimeout(() => {\n      this.data = null;\n      this.onDataRemoved.emit(true);\n    }, 0);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate escapeKeyboardEvent(event: KeyboardEvent) {\n    if (this.escapeAble) {\n      const /** @type {?} */ x = event.keyCode;\n      if (x === 27) {\n        this.onEscape.emit(this);\n        this.ngxSmartModalService.closeLatestModal();\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  animations: [\n    trigger('dialog', [\n      transition('void => *', [\n        style({transform: 'scale3d(.3, .3, .3)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'scale3d(.0, .0, .0)'}))\n      ])\n    ])\n  ],\n  selector: 'ngx-smart-modal',\n  template: `\n    <style>\n      .overlay {\n        position: fixed;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        overflow-y: auto;\n        background-color: rgba(0, 0, 0, 0.5);\n        z-index: 999;\n      }\n\n      .overlay.transparent {\n        background-color: transparent;\n      }\n\n      body.dialog-open {\n        overflow: hidden;\n      }\n\n      .dialog {\n        visibility: visible;\n        position: absolute;\n        border-radius: 2px;\n        right: 0;\n        left: 0;\n        top: 20px;\n        margin-bottom: 20px;\n        margin-right: auto;\n        margin-left: auto;\n        min-height: 200px;\n        width: 90%;\n        max-width: 520px;\n        background-color: #fff;\n        padding: 12px;\n        box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2), 0 13px 19px 2px rgba(0, 0, 0, 0.14), 0 5px 24px 4px rgba(0, 0, 0, 0.12);\n      }\n\n      @media (min-width: 768px) {\n        .dialog {\n          top: 40px;\n          margin-bottom: 40px;\n        }\n      }\n\n      .dialog__close-btn {\n        border: 0;\n        background: none;\n        color: #2d2d2d;\n        position: absolute;\n        top: 8px;\n        right: 8px;\n        font-size: 1.2em;\n      }\n\n      .dialog__close-btn:hover {\n        cursor: pointer;\n      }\n    </style>\n    <div *ngIf=\"overlayVisible\" class=\"overlay\" [style.z-index]=\"layerPosition-1\"\n         [ngClass]=\"{'transparent':!backdrop}\"\n         (click)=\"dismiss($event)\">\n      <div [@dialog] *ngIf=\"visible\" [style.z-index]=\"layerPosition\" class=\"dialog\" [ngClass]=\"customClass\">\n        <ng-content></ng-content>\n        <button *ngIf=\"closable\" (click)=\"close()\" aria-label=\"Close\" class=\"dialog__close-btn\">\n          <img\n            src=\"data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeD0iMHB4IiB5PSIwcHgiIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgd2lkdGg9IjE2cHgiIGhlaWdodD0iMTZweCI+CjxnPgoJPGc+CgkJPHBhdGggZD0iTTUwNS45NDMsNi4wNThjLTguMDc3LTguMDc3LTIxLjE3Mi04LjA3Ny0yOS4yNDksMEw2LjA1OCw0NzYuNjkzYy04LjA3Nyw4LjA3Ny04LjA3NywyMS4xNzIsMCwyOS4yNDkgICAgQzEwLjA5Niw1MDkuOTgyLDE1LjM5LDUxMiwyMC42ODMsNTEyYzUuMjkzLDAsMTAuNTg2LTIuMDE5LDE0LjYyNS02LjA1OUw1MDUuOTQzLDM1LjMwNiAgICBDNTE0LjAxOSwyNy4yMyw1MTQuMDE5LDE0LjEzNSw1MDUuOTQzLDYuMDU4eiIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHBhdGggZD0iTTUwNS45NDIsNDc2LjY5NEwzNS4zMDYsNi4wNTljLTguMDc2LTguMDc3LTIxLjE3Mi04LjA3Ny0yOS4yNDgsMGMtOC4wNzcsOC4wNzYtOC4wNzcsMjEuMTcxLDAsMjkuMjQ4bDQ3MC42MzYsNDcwLjYzNiAgICBjNC4wMzgsNC4wMzksOS4zMzIsNi4wNTgsMTQuNjI1LDYuMDU4YzUuMjkzLDAsMTAuNTg3LTIuMDE5LDE0LjYyNC02LjA1N0M1MTQuMDE4LDQ5Ny44NjYsNTE0LjAxOCw0ODQuNzcxLDUwNS45NDIsNDc2LjY5NHoiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8L3N2Zz4K\" />\n        </button>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgxSmartModalService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'closable': [{ type: Input },],\n'escapeAble': [{ type: Input },],\n'identifier': [{ type: Input },],\n'customClass': [{ type: Input },],\n'visible': [{ type: Input },],\n'backdrop': [{ type: Input },],\n'force': [{ type: Input },],\n'visibleChange': [{ type: Output },],\n'onClose': [{ type: Output },],\n'onDismiss': [{ type: Output },],\n'onOpen': [{ type: Output },],\n'onEscape': [{ type: Output },],\n'onDataAdded': [{ type: Output },],\n'onDataRemoved': [{ type: Output },],\n'escapeKeyboardEvent': [{ type: HostListener, args: ['document:keydown', ['$event'], ] },],\n};\n}\n\nfunction NgxSmartModalComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSmartModalComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSmartModalComponent.ctorParameters;\n/** @type {?} */\nNgxSmartModalComponent.propDecorators;\n/** @type {?} */\nNgxSmartModalComponent.prototype.closable;\n/** @type {?} */\nNgxSmartModalComponent.prototype.escapeAble;\n/** @type {?} */\nNgxSmartModalComponent.prototype.identifier;\n/** @type {?} */\nNgxSmartModalComponent.prototype.customClass;\n/** @type {?} */\nNgxSmartModalComponent.prototype.visible;\n/** @type {?} */\nNgxSmartModalComponent.prototype.backdrop;\n/** @type {?} */\nNgxSmartModalComponent.prototype.force;\n/** @type {?} */\nNgxSmartModalComponent.prototype.visibleChange;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onClose;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onDismiss;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onOpen;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onEscape;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onDataAdded;\n/** @type {?} */\nNgxSmartModalComponent.prototype.onDataRemoved;\n/** @type {?} */\nNgxSmartModalComponent.prototype.layerPosition;\n/** @type {?} */\nNgxSmartModalComponent.prototype.overlayVisible;\n/** @type {?} */\nNgxSmartModalComponent.prototype.data;\n/** @type {?} */\nNgxSmartModalComponent.prototype.ngxSmartModalService;\n/** @type {?} */\nNgxSmartModalComponent.prototype.changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgxSmartModalService} from '../services/ngx-smart-modal.service';\nimport {NgxSmartModalComponent} from '../components/ngx-smart-modal.component';\nexport class NgxSmartModalModule {\n/**\n * Use in AppModule: new instance of NgxSmartModal.\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: NgxSmartModalModule,\n            providers: [NgxSmartModalService]\n        };\n    }\n/**\n * Use in features modules with lazy loading: new instance of NgxSmartModal.\n * @return {?}\n */\npublic static forChild(): ModuleWithProviders {\n        return {\n            ngModule: NgxSmartModalModule,\n            providers: [NgxSmartModalService]\n        };\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [NgxSmartModalComponent],\n    exports: [NgxSmartModalComponent],\n    imports: [CommonModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxSmartModalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSmartModalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSmartModalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgxSmartModalService","this","modalStack","prototype","addModal","modalInstance","force","i","findIndex","o","id","modal","push","getModal","filter","getModalStack","getOpenedModals","modals","forEach","visible","getHigherIndex","index","layerPosition","Math","max","apply","getModalStackCount","length","removeModal","splice","setModalData","data","find","setData","getModalData","getData","resetModalData","removed","removeData","closeLatestModal","me","clearTimeout","debouncer","setTimeout","tmp","m","close","decorators","type","Injectable","ctorParameters","NgxSmartModalComponent","ngxSmartModalService","changeDetectorRef","closable","escapeAble","customClass","backdrop","visibleChange","EventEmitter","onClose","onDismiss","onOpen","onEscape","onDataAdded","onDataRemoved","overlayVisible","ngOnInit","identifier","ngOnDestroy","open","top","document","body","classList","contains","add","emit","remove","markForCheck","dismiss","e","target","addCustomClass","className","removeCustomClass","replace","trim","isVisible","hasData","_this","escapeKeyboardEvent","event","keyCode","Component","args","animations","trigger","transition","style","transform","animate","selector","template","ChangeDetectorRef","propDecorators","Input","Output","HostListener","NgxSmartModalModule","forRoot","ngModule","providers","forChild","NgModule","declarations","exports","imports","CommonModule"],"mappings":"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"}